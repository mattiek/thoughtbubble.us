// Generated by CoffeeScript 1.7.1
var csrfSafeMethod, getCookie, init, playDinoSound, sameOrigin;

$('#login').magnificPopup({
  type: 'inline',
  midClick: true
});

$('#login-overlay .submit.login').click(function(e) {
  var url;
  e.preventDefault();
  $('#login-error').html('');
  url = $('#overlay-login-form').attr('action');
  return $.post(url, $('#overlay-login-form').serialize(), function(response) {
    if (response.success) {
      return window.location = window.location;
    } else {
      return $('#login-error').html('Incorrect user/password credentials.');
    }
  });
});

$('#login-with-email').click(function(e) {
  e.preventDefault();
  return $('#login-overlay').addClass('reveal-email');
});

$('[data-view=logged-out] #primary-add').click(function(e) {
  e.preventDefault();
  return $('#login').click();
});

$('#join').magnificPopup({
  type: 'inline',
  midClick: true
});

$('#footer-logout').magnificPopup({
  type: 'inline',
  midClick: true
});

$('#create-an-account').magnificPopup({
  type: 'inline',
  midClick: true
});

$(document).on("click", ".message-box", function(e) {
  return $(this).remove();
});

$(document).on("click", "[data-view=logged-out] .login-required", function(e) {
  e.preventDefault();
  return $.magnificPopup.open({
    items: {
      src: '#login-overlay',
      type: 'inline'
    }
  });
});

playDinoSound = function() {
  var buffer, source;
  buffer = window.dinoSoundBuffer;
  source = window.context.createBufferSource();
  source.buffer = buffer;
  source.connect(window.context.destination);
  return source.start(0);
};

$(document).on("click", ".dislike", function(e) {
  e.preventDefault();
  return $.magnificPopup.open({
    items: {
      src: '#dislike-overlay',
      type: 'inline'
    },
    callbacks: {
      open: function() {
        return playDinoSound();
      }
    }
  });
});

$(document).on("click", "#dino_comment", function(e) {
  return $.magnificPopup.close();
});

$(document).ready(function() {
  return init();
});

init = function() {
  var e, loadDinoSound, onError;
  try {
    window.dinoSoundBuffer = null;
    window.AudioContext = window.AudioContext || window.webkitAudioContext;
    window.context = new AudioContext();
    onError = function(e) {
      return console.log(e);
    };
    loadDinoSound = function(url) {
      var request;
      request = new XMLHttpRequest();
      request.open('GET', url, true);
      request.responseType = 'arraybuffer';
      request.onload = function() {
        return window.context.decodeAudioData(request.response, function(buffer) {
          return window.dinoSoundBuffer = buffer;
        }, onError);
      };
      return request.send();
    };
    return loadDinoSound(dinoSoundURL);
  } catch (_error) {
    e = _error;
    return console.log('no sound');
  }
};

$('.image-popup-no-margins').magnificPopup({
  type: 'image',
  closeOnContentClick: true,
  closeBtnInside: false,
  fixedContentPos: true,
  mainClass: 'mfp-no-margins mfp-with-zoom',
  image: {
    verticalFit: true
  },
  zoom: {
    enabled: true,
    duration: 300
  }
});

getCookie = function(name) {
  var cookie, cookieValue, cookies, i, _i, _len;
  cookieValue = null;
  if (document.cookie && document.cookie !== '') {
    cookies = document.cookie.split(';');
    for (_i = 0, _len = cookies.length; _i < _len; _i++) {
      i = cookies[_i];
      cookie = jQuery.trim(i);
      if (cookie.substring(0, name.length + 1) === (name + '=')) {
        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
        break;
      }
    }
  }
  return cookieValue;
};

csrfSafeMethod = function(method) {
  return /^(GET|HEAD|OPTIONS|TRACE)$/.test(method);
};

sameOrigin = function(url) {
  var host, origin, protocol, sr_origin;
  host = document.location.host;
  protocol = document.location.protocol;
  sr_origin = '//' + host;
  origin = protocol + sr_origin;
  return (url === origin || url.slice(0, origin.length + 1) === origin + '/') || (url === sr_origin || url.slice(0, sr_origin.length + 1) === sr_origin + '/') || !(/^(\/\/|http:|https:).*/.test(url));
};

$.ajaxSetup({
  beforeSend: function(xhr, settings) {
    if (!csrfSafeMethod(settings.type) && sameOrigin(settings.url)) {
      return xhr.setRequestHeader("X-CSRFToken", getCookie('csrftoken'));
    }
  }
});

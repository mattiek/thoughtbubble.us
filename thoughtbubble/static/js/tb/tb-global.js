// Generated by CoffeeScript 1.6.3
$('#login').magnificPopup({
  type: 'inline',
  midClick: true
});

$('#login-overlay .submit.login').click(function(e) {
  var url;
  e.preventDefault();
  $('#login-error').html('');
  url = $('#overlay-login-form').attr('action');
  return $.post(url, $('#overlay-login-form').serialize(), function(response) {
    if (response.success) {
      return window.location = window.location;
    } else {
      return $('#login-error').html('Incorrect user/password credentials.');
    }
  });
});

$('#login-with-email').click(function(e) {
  e.preventDefault();
  return $('#login-overlay').addClass('reveal-email');
});

$('.logged-out #primary-add').click(function(e) {
  e.preventDefault();
  return $('#login').click();
});

$('#join').magnificPopup({
  type: 'inline',
  midClick: true
});

$('#footer-logout').magnificPopup({
  type: 'inline',
  midClick: true
});

$('#create-an-account').magnificPopup({
  type: 'inline',
  midClick: true
});

$(document).on("click", ".message-box", function(e) {
  return $(this).remove();
});

$(document).on("click", ".logged-out .login-required", function(e) {
  e.preventDefault();
  return $.magnificPopup.open({
    items: {
      src: '#login-overlay',
      type: 'inline'
    }
  });
});

$(document).on("click", ".dislike", function(e) {
  e.preventDefault();
  return $.magnificPopup.open({
    items: {
      src: '#dislike-overlay',
      type: 'inline'
    },
      callbacks: {
          open: function() {
             playDinoSound();
          }
     }
  });
});

$(document).on("click", "#dino_comment", function(e) {
    return $.magnificPopup.close();
});

var context;
window.addEventListener('load', init, false);
function init() {
    try {
        window.dinoSoundBuffer = null;
        // Fix up prefixing
        window.AudioContext = window.AudioContext || window.webkitAudioContext;
        context = new AudioContext();

        function onError(e) {
            console.log(e);
        }
        function loadDinoSound(url) {
            var request = new XMLHttpRequest();
            request.open('GET', url, true);
            request.responseType = 'arraybuffer';

            // Decode asynchronously
            request.onload = function() {
                context.decodeAudioData(request.response, function(buffer) {
                    window.dinoSoundBuffer = buffer;
                }, onError);
            }
            request.send();
        }

        loadDinoSound(dinoSoundURL);
    }
    catch(e) {
//        alert('Web Audio API is not supported in this browser');
    }
}

function playDinoSound() {
    buffer = window.dinoSoundBuffer;
    var source = context.createBufferSource(); // creates a sound source
    source.buffer = buffer;                    // tell the source which sound to play
    source.connect(context.destination);       // connect the source to the context's destination (the speakers)
    source.start(0);                           // play the source now
    // note: on older systems, may have to use deprecated noteOn(time);
}
